Start parsing "../test/test22.go"...
Nearing end "../test/test22.go"...
env<2>
b : offset: 4 parsedDataType: int size: 4 default size: 4 isArray: false
t<3> : offset: 16 parsedDataType: int size: 4 default size: 4 isArray: false
a : offset: 0 parsedDataType: int size: 4 default size: 4 isArray: false
t<4> : offset: 20 parsedDataType: int size: 4 default size: 4 isArray: false
t<5> : offset: 24 parsedDataType: int size: 4 default size: 4 isArray: false
t<6> : offset: 28 parsedDataType: int size: 4 default size: 4 isArray: false
t<1> : offset: 8 parsedDataType: int size: 4 default size: 4 isArray: false
t<2> : offset: 12 parsedDataType: int size: 4 default size: 4 isArray: false
env<1>
_main : offset: 0 parsedDataType: bool size: 1 default size: 1 isArray: false
0	package = main
1	GLOBAL: env<1>
2	_main: env<2>
3	#a# = 0
4	#b# = 0
5	t<1> = #a#
6	t<2> = 3
7	#a# = t<2>
8	t<3> = #b#
9	t<4> = #a#
10	t<5> = 1
11	t<6> = t<5> + t<4>
12	#b# = t<6>
13	ret
SYMBOL TABLE NAMES: 
0: env<2>
1: env<1>
1 env<2> updating in its table var b
5 env<2> updating in its table temp t<6>
4 env<2> updating in its table temp t<6>
5 env<2> updating in its table temp t<5>
6 env<2> updating in its table temp t<4>
4 env<2> updating in its table temp t<5>
2 env<2> updating in its table var a
4 env<2> updating in its table temp t<4>
2 env<2> updating in its table var b
4 env<2> updating in its table temp t<3>
1 env<2> updating in its table var a
5 env<2> updating in its table temp t<2>
4 env<2> updating in its table temp t<2>
2 env<2> updating in its table var a
4 env<2> updating in its table temp t<1>
1 env<2> updating in its table var b
1 env<2> updating in its table var a
Printing before sorting env tables: 

PRINTING ENV:::: env<2>

b : offset: 4 parsedDataType: int size: 4 default size: 4 isArray: false
a : offset: 0 parsedDataType: int size: 4 default size: 4 isArray: false
t<3> : offset: 16 parsedDataType: int size: 4 default size: 4 isArray: false
t<4> : offset: 20 parsedDataType: int size: 4 default size: 4 isArray: false
t<5> : offset: 24 parsedDataType: int size: 4 default size: 4 isArray: false
t<6> : offset: 28 parsedDataType: int size: 4 default size: 4 isArray: false
t<1> : offset: 8 parsedDataType: int size: 4 default size: 4 isArray: false
t<2> : offset: 12 parsedDataType: int size: 4 default size: 4 isArray: false

PRINTING ENV:::: env<1>

_main : offset: 0 parsedDataType: bool size: 1 default size: 1 isArray: false
Ending Printing env tables


 
ENV:::: env<2> has incr_global_offset: 0
ENV:::: env<1> has incr_global_offset: 0
@@ISHAAN@@main:
LINE RECIEVED a : 0 : = : nullERROR: undefined: 0
***** REGISTER eax *****
***** REGISTER ebx *****
***** REGISTER ecx *****
***** REGISTER edx *****
KEY : a
***** REGISTER edi *****
***** REGISTER esi *****
Var: a reg: edx 
LINE RECIEVED b : 0 : = : nullERROR: undefined: 0
***** REGISTER eax *****
***** REGISTER ebx *****
***** REGISTER ecx *****
KEY : b
***** REGISTER edx *****
KEY : a
***** REGISTER edi *****
***** REGISTER esi *****
Var: b reg: ecx 
LINE RECIEVED t<1> : a : = : nullWARNING: edx already added 
PRINTING TO CONFIRM
Var: a reg: edx 
Var: a reg: edx 
***** REGISTER eax *****
***** REGISTER ebx *****
***** REGISTER ecx *****
KEY : b
***** REGISTER edx *****
KEY : a
KEY : t<1>
***** REGISTER edi *****
***** REGISTER esi *****
Var: t<1> reg: edx 
LINE RECIEVED t<2> : 3 : = : nullERROR: undefined: 3
***** REGISTER eax *****
***** REGISTER ebx *****
***** REGISTER ecx *****
KEY : b
***** REGISTER edx *****
KEY : a
KEY : t<1>
***** REGISTER edi *****
KEY : t<2>
***** REGISTER esi *****
Var: t<2> reg: edi 
LINE RECIEVED a : t<2> : = : nullWARNING: edi already added 
PRINTING TO CONFIRM
Var: t<2> reg: edi 
Var: t<2> reg: edi 
***** REGISTER eax *****
***** REGISTER ebx *****
***** REGISTER ecx *****
KEY : b
***** REGISTER edx *****
KEY : t<1>
***** REGISTER edi *****
KEY : t<2>
KEY : a
***** REGISTER esi *****
Var: a reg: edi 
LINE RECIEVED t<3> : b : = : nullWARNING: ecx already added 
PRINTING TO CONFIRM
Var: b reg: ecx 
Var: b reg: ecx 
***** REGISTER eax *****
***** REGISTER ebx *****
***** REGISTER ecx *****
KEY : b
KEY : t<3>
***** REGISTER edx *****
KEY : t<1>
***** REGISTER edi *****
KEY : t<2>
KEY : a
***** REGISTER esi *****
Var: t<3> reg: ecx 
LINE RECIEVED t<4> : a : = : nullWARNING: edi already added 
PRINTING TO CONFIRM
Var: a reg: edi 
Var: a reg: edi 
***** REGISTER eax *****
***** REGISTER ebx *****
***** REGISTER ecx *****
KEY : b
KEY : t<3>
***** REGISTER edx *****
KEY : t<1>
***** REGISTER edi *****
KEY : t<2>
KEY : a
KEY : t<4>
***** REGISTER esi *****
Var: t<4> reg: edi 
LINE RECIEVED t<5> : 1 : = : nullERROR: undefined: 1
***** REGISTER eax *****
***** REGISTER ebx *****
***** REGISTER ecx *****
KEY : b
KEY : t<3>
***** REGISTER edx *****
KEY : t<1>
***** REGISTER edi *****
KEY : t<2>
KEY : a
KEY : t<4>
***** REGISTER esi *****
KEY : t<5>
Var: t<5> reg: esi 
LINE RECIEVED t<6> : t<5> : + : t<4>WARNING: esi already added 
PRINTING TO CONFIRM
Var: t<5> reg: esi 
@#@#@: t<6> has found offset: 28 and  + e.incr_global_offset: 0 in ENV: env<2>
WARNING: edi already added 
PRINTING TO CONFIRM
Var: t<4> reg: edi 
LINE RECIEVED b : t<6> : = : nullWARNING: ebx already added 
PRINTING TO CONFIRM
Var: t<6> reg: ebx 
Var: t<6> reg: ebx 
***** REGISTER eax *****
***** REGISTER ebx *****
KEY : t<6>
KEY : b
***** REGISTER ecx *****
KEY : t<3>
***** REGISTER edx *****
KEY : t<1>
***** REGISTER edi *****
KEY : t<2>
KEY : a
KEY : t<4>
***** REGISTER esi *****
KEY : t<5>
Var: b reg: ebx 
LINE RECIEVED ret : null : null : nullVar: t<1> before  reg: edx 
*******DELETING edx from t<1>
SUCCESS: removed register edx from t<1> while spilling inside env env<2>
Var: t<1> after  
@#@#@: t<1> has found offset: 8 and  + e.incr_global_offset: 0 in ENV: env<2>
SPILLING   Var: t<1> reg: [ebp-8] 
@#@#@: t<1> has found offset: 8 and  + e.incr_global_offset: 0 in ENV: env<2>
Var: t<3> before  reg: ecx 
*******DELETING ecx from t<3>
SUCCESS: removed register ecx from t<3> while spilling inside env env<2>
Var: t<3> after  
@#@#@: t<3> has found offset: 16 and  + e.incr_global_offset: 0 in ENV: env<2>
SPILLING   Var: t<3> reg: [ebp-16] 
@#@#@: t<3> has found offset: 16 and  + e.incr_global_offset: 0 in ENV: env<2>
Var: t<2> before  reg: edi 
*******DELETING edi from t<2>
SUCCESS: removed register edi from t<2> while spilling inside env env<2>
Var: t<2> after  
@#@#@: t<2> has found offset: 12 and  + e.incr_global_offset: 0 in ENV: env<2>
SPILLING   Var: t<2> reg: [ebp-12] 
@#@#@: t<2> has found offset: 12 and  + e.incr_global_offset: 0 in ENV: env<2>
Var: a before  reg: edi 
*******DELETING edi from a
SUCCESS: removed register edi from a while spilling inside env env<2>
Var: a after  
@#@#@: a has found offset: 0 and  + e.incr_global_offset: 0 in ENV: env<2>
SPILLING   Var: a reg: [ebp-0] 
@#@#@: a has found offset: 0 and  + e.incr_global_offset: 0 in ENV: env<2>
Var: t<4> before  reg: edi 
*******DELETING edi from t<4>
SUCCESS: removed register edi from t<4> while spilling inside env env<2>
Var: t<4> after  
@#@#@: t<4> has found offset: 20 and  + e.incr_global_offset: 0 in ENV: env<2>
SPILLING   Var: t<4> reg: [ebp-20] 
@#@#@: t<4> has found offset: 20 and  + e.incr_global_offset: 0 in ENV: env<2>
Var: t<5> before  reg: esi 
*******DELETING esi from t<5>
SUCCESS: removed register esi from t<5> while spilling inside env env<2>
Var: t<5> after  
@#@#@: t<5> has found offset: 24 and  + e.incr_global_offset: 0 in ENV: env<2>
SPILLING   Var: t<5> reg: [ebp-24] 
@#@#@: t<5> has found offset: 24 and  + e.incr_global_offset: 0 in ENV: env<2>
Var: t<6> before  reg: ebx 
*******DELETING ebx from t<6>
SUCCESS: removed register ebx from t<6> while spilling inside env env<2>
Var: t<6> after  
@#@#@: t<6> has found offset: 28 and  + e.incr_global_offset: 0 in ENV: env<2>
SPILLING   Var: t<6> reg: [ebp-28] 
@#@#@: t<6> has found offset: 28 and  + e.incr_global_offset: 0 in ENV: env<2>
Var: b before  reg: ebx 
*******DELETING ebx from b
SUCCESS: removed register ebx from b while spilling inside env env<2>
Var: b after  
@#@#@: b has found offset: 4 and  + e.incr_global_offset: 0 in ENV: env<2>
SPILLING   Var: b reg: [ebp-4] 
@#@#@: b has found offset: 4 and  + e.incr_global_offset: 0 in ENV: env<2>
0	package = main
1	GLOBAL: env<1>
2	_main: env<2>
3	a = 0
4	b = 0
5	t<1> = a
6	t<2> = 3
7	a = t<2>
8	t<3> = b
9	t<4> = a
10	t<5> = 1
11	t<6> = t<5> + t<4>
12	b = t<6>
13	ret
section .text

extern printf

global main


main:
push ebp
mov ebp, esp
sub esp, 32
mov edx, 0
mov ecx, 0
mov edi, 3
mov esi, 1
mov ebx, esi
add ebx, edi
mov [ebp-8], edx
mov [ebp-16], ecx
mov [ebp-12], edi
mov [ebp-0], edi
mov [ebp-20], edi
mov [ebp-24], esi
mov [ebp-28], ebx
mov [ebp-4], ebx
mov esp, ebp
pop ebp
pop edx
push edx
ret



mov esp, ebp
pop ebp
ret


message db 'The character is: %d', 10, 0
 
